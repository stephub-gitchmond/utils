# include this in your .gitconfig like so:
# [include]
#     path = path/to/this/file

[grep]
    extendedRegexp=true

[alias]
    fs = "! git f -q; git s"

    f = fetch -a --prune

    s = status -sb

    b = branch -vv

    r = rebase --autostash --autosquash

    # recent commits
    last = log --format=format:'%C(yellow)%h%C(reset) %s - %C(dim green)%aN%C(reset) - %C(yellow)%ar%C(reset) %C(dim red)%d%C(reset)' -n 10

    # my preferred log format
    logf = log --format=format:'%C(yellow)%h%C(reset) %s - %C(dim green)%aN%C(reset) - %C(yellow)%ar%C(reset) %C(dim red)%d%C(reset)'

    # log with one line per commit, no line-wrap
    lg = "! lg(){ git logf --graph --color \"$@\" | less -SRXF;}; lg"

    # unpushed commits
    topush = "! git fetch -q; b=`git rev-parse --abbrev-ref HEAD`; git log --oneline --no-decorate origin/$b..HEAD"

    # commits to be pulled
    topull = "! git fetch -q; b=`git rev-parse --abbrev-ref HEAD`; git log --oneline --no-decorate HEAD..origin/$b"

    # stash, pull, pop stash, print summary
    p = "! t=`git topull --color`; \
           if [ -z \"$t\" ]; then \
               echo 'Up to date'; \
           else \
               echo 'Will pull:'; echo \"$t\"; echo; \
               git pull -q --autostash; \
           fi"

    # prints details of commit whose subject contains the search string
    # if multiple, displays list the prints details of first match
    det = "!det(){ \
               if [ -z "$1" ]; then \
                   echo 'Specify a search string'; \
               else \
                   git log --oneline --grep \"$1\"; \
                   echo; \
                   git log --pretty='%H' --grep \"$1\" | head -1 | xargs git show --format=format:%b ; \
               fi }; \
           det"
